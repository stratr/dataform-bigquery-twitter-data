config {
  type: "table",
  description: "Election results on nominee level.",
  columns: {
    name: "First and last name",
    nominee_id: "Unique id for the nominee",
    election: "The type of election result, e.g. eduskuntavaalit_2019."
  }
}

with electoral_districts as (
  select
    vaalipiiri___maakuntanro,
    trim(
      kunnan_vaalipiirin__maakunnan__aanestysalueen_nimi_suomeksi
    ) as electoral_district_name,
    row_number() over(
      partition by trim(
        kunnan_vaalipiirin__maakunnan__aanestysalueen_nimi_suomeksi
      )
    ) as distinct_row_num
  from
    `tanelis.election_results.ekv-2019_teat_maa`
  where
    trim(alueen_tyyppi) = 'V' qualify distinct_row_num = 1
),
municipalities as (
  select
    kuntanro,
    trim(
      regexp_replace(
        kunnan_vaalipiirin__maakunnan__aanestysalueen_nimi_suomeksi,
        r"�ä",
        "ää"
      )
    ) as municipality_name,
    row_number() over(
      partition by trim(
        regexp_replace(
          kunnan_vaalipiirin__maakunnan__aanestysalueen_nimi_suomeksi,
          r"�ä",
          "ää"
        )
      )
    ) as distinct_row_num
  from
    `tanelis.election_results.ekv-2019_teat_maa`
  where
    trim(alueen_tyyppi) = 'K' qualify distinct_row_num = 1
),
nominee_results as (
  select
    concat(ehdokasnumero, vaalipiiri___maakuntanro) as nominee_election_id,
    lopullinen_sija as rank_in_electoral_district,
    vertausluku as comparison_number,
    if(
      trim(valintatieto) = '1',
      true,
      false
    ) as elected,
    row_number() over(
      partition by ehdokasnumero,
      vaalipiiri___maakuntanro
    ) as distinct_row_num
  from
    `tanelis.election_results.ekv-2019_teat_maa`
  where
    trim(alueen_tyyppi) = 'V' qualify distinct_row_num = 1
)
select
  -- (
  --   case
  --     trim(alueen_tyyppi)
  --     when 'A' then 'äänestysalue'
  --     when 'K' then 'kunta'
  --     when 'M' then 'maakunta'
  --     when 'V' then 'vaalipiiri'
  --     when 'M' then 'koko maa'
  --   end
  -- ) as votes_grouping_level,
  concat(
    (
      case
        trim(vaalilaji)
        when 'PV' then 'presidentinvaalit'
        when 'E' then 'eduskuntavaalit'
        when 'K' then 'kunnallisvaalit'
        when 'EPV' then 'europarlamenttivaalit'
        when 'MKV' then 'maakuntavaalit'
      end
    ),
    '_2019'
  ) as election,
  B.electoral_district_name,
  C.municipality_name,
  trim(
    kunnan_vaalipiirin__maakunnan__aanestysalueen_nimi_suomeksi
  ) as voting_area_name,
  concat(
    trim(henkilon_etunimi),
    ' ',
    trim(henkilon_sukunimi)
  ) as name,
  concat(ehdokasnumero, vaalipiiri___maakuntanro) as nominee_election_id,
  trim(ehdokasnumero) as nominee_election_number,
  trim(pysyva_puoluetunniste) as party_code,
  trim(puolueen_ryhman_nimilyhenne_suomeksi) as party_short,
  (
    case
      trim(puolueen_ryhman_nimilyhenne_suomeksi)
      when "PS" then "Perussuomalaiset"
      when "SDP" then "Sosiaalidemokraatit"
      when "KOK" then "Kokoomus"
      when "VIHR" then "Vihreät"
      when "KESK" then "Keskusta"
      when "VAS" then "Vasemmistoliitto"
      when "RKP" then "Ruotsalainen kansanpuolue"
      when "FÅ" then "Ruotsalainen kansanpuolue"
      when "KD" then "Kristillisdemokraatit"
      when "LIIK" then "Liike Nyt"
      when "Nyt" then "Liike Nyt"
      when "SIN" then "Siniset"
      else null
    end
  ) as party,
  safe_cast(ennakkoaanet_lkm as int64) as preliminary_votes,
  safe_cast(vaalipaivan_aanet_lkm as int64) as election_day_votes,
  D.rank_in_electoral_district,
  D.comparison_number,
  safe_cast(aanet_yhteensa_lkm as int64) as total_votes,
  D.elected,
  (
    case
      trim(sukupuoli)
      when '1' then 'male'
      when '2' then 'female'
      else 'other'
    end
  ) as gender,
  safe_cast(trim(ika_vaalipaivana) as int64) as age_election_day,
  trim(ammatti) as profession,
  trim(kotikunnan_nimi_suomeksi) as home_town,
  trim(ehdokkaan_aidinkieli) as nominee_language,
  (
    select
      as struct if(
        trim(europarlamentaarikko) = '1',
        true,
        false
      ) as european_parliament,
      if(
        trim(kansanedustaja) = '1',
        true,
        false
      ) as finnish_parliament,
      if(
        trim(kunnanvaltuutettu) = '1',
        true,
        false
      ) as municipal_parliament,
      if(
        trim(maakuntavaltuutettu) = '1',
        true,
        false
      ) as county_parliament,
  ) as responsibilities
from
  `tanelis.election_results.ekv-2019_teat_maa`
  left join electoral_districts B using(vaalipiiri___maakuntanro)
  left join municipalities C using(kuntanro)
  left join nominee_results D on D.nominee_election_id = concat(ehdokasnumero, vaalipiiri___maakuntanro)
where
  trim(alueen_tyyppi) = 'A'
  -- the highest detail grouping: voting area level
