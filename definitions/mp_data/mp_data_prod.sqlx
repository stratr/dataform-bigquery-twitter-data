config {
  type: "table",
  description: "List of members of parliament in nested format.",
  tags: ["mp_data"],
  columns: {
    active_finnish_parliament: 'Wether or not the person is currently an active member of the Finnish parliament.',
    finnish_parliament: 'Array of terms when the person has been active in the parliament. A change of party shows up as a new term in the array.',
    finnish_parliament_minister: 'Array of minister roles in the government.',
    eduskunta_page_url: 'URL to find out more details about the MP',
    twitter: 'Details about the associated Twitter user(s)',
    datastudio_filter: 'A direct link with applied filters to the Data Studio dashboard.'
  }
}

WITH sheets_data AS (
  SELECT
    name,
    MAX(active_term) AS active_finnish_parliament,
    ARRAY_REVERSE(ARRAY_AGG(screen_name IGNORE NULLS)) [SAFE_OFFSET(0)] AS twitter_screen_name,
    -- in case of multiple entries, the last one is read
    SPLIT(
      ARRAY_REVERSE(ARRAY_AGG(screen_names_old IGNORE NULLS)) [SAFE_OFFSET(0)],
      ','
    ) AS twitter_screen_names_old,
    -- in case of multiple entries, the last one is read
    ARRAY_AGG(
      (
        SELECT
          AS STRUCT term AS term,
          party AS party,
          parliament_group AS parliament_group,
          term_start AS term_start,
          term_end AS term_end,
          active_term AS term_active
      ) IGNORE NULLS
    ) AS finnish_parliament,
    ARRAY_REVERSE(ARRAY_AGG(url IGNORE NULLS)) [SAFE_OFFSET(0)] AS eduskunta_page_url
  FROM
    ${ref("mp_data_prod_flat")}
  GROUP BY
    1
),
twitter_image as (
  select
    user_screen_name,
    array_agg(
      user_image ignore nulls
      order by
        date desc
    ) [safe_offset(0)] as user_image
  from
    ${resolve('tweets')}
  group by
    user_screen_name
),
ministers as (
  select
    *
  from
    ${ref('minister_terms')}
)
SELECT
  A.*
EXCEPT(twitter_screen_name, twitter_screen_names_old),
C.* except(name),
  (
    SELECT
      AS STRUCT twitter_screen_name AS screen_name,
      twitter_screen_names_old AS screen_names_old,
      B.user_image
  ) AS twitter,
  'https://datastudio.google.com/u/0/reporting/0c5ed213-ffc6-432b-85bc-4fd032056bbe/page/Mky6B?' || `tanelis.functions.url_encode`(
    concat(
      'params={"df337":"include%EE%80%800%EE%80%80IN%EE%80%80',
      `tanelis.functions.url_encode`(A.name),
      '"}'
    )
  ) as datastudio_filter
FROM
  sheets_data A
  left join twitter_image B on A.twitter_screen_name = B.user_screen_name
  left join ministers C on A.name = C.name
-- select
--   *
-- from
--   ministers
