config {
  type: "incremental",
  tags: ['daily'],
  description: "Tweets per day from each member of parliament.",
  bigquery: {
    partitionBy: "date",
    clusterBy: ["name"]
  },
}

with tweets_daily as (
  select
    date,
    name,
    COUNT(DISTINCT id_str) as tweets,
    max(user_followers) as user_followers,
    array_concat_agg(user_mentions) as user_mentions,
    array_concat_agg(mp_mention_name) as mp_mention_name,
    array_concat_agg(mp_mention_party) as mp_mention_party,
    array_concat_agg(mp_mention_parliament_group) as mp_mention_parliament_group
  from
    ${ref("tweets")} ${when(incremental(), `where date > (select max(date) from ${self()}) and date < current_date()`)}
  group by
    date,
    name
),
members as (
  select
    *,
    GENERATE_DATE_ARRAY(
      DATE('2019-10-08'),
      CURRENT_DATE() -1,
      INTERVAL 1 DAY
    ) as dates
  from
    ${resolve('mp_data_flattened_term_view')}
),
members_unnest as (
  select
    *
  except(dates)
  from
    members,
    unnest(dates) as date
  where
    date >= term_start
    and date <= term_end
),
join_data as (
  select
    A.*,
    coalesce(B.tweets, 0) as tweets,
    B.user_followers,
    B.user_mentions,
    B.mp_mention_name,
    B.mp_mention_party,
    B.mp_mention_parliament_group
  from
    members_unnest A
    left join tweets_daily B on A.date = B.date
    and A.name = B.name
)
select
  * except(user_followers),
  last_value(user_followers ignore nulls) over (
    partition by name
    order by
      date asc rows between unbounded preceding
      and current row
  ) user_followers
from
  join_data
