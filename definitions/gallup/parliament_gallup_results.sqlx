config {
  type: "view"
}

with raw_data as (
  select
    farm_fingerprint(coalesce(date, survey)) as survey_id,
    row_number() over(partition by date, survey) as unique_row_num,
    *
  except(Johto)
  from
    `tanelis.gallup.eduskuntavaalit`
),
rearrange_data as (
  select
    *
  except(unique_row_num)
  from
    raw_data unpivot(
      support FOR party IN (
        SDP,
        PS,
        KOK,
        KESK,
        VIHR,
        VAS,
        RKP,
        KD,
        LIIK,
        Muut,
        Hallitus,
        Oppositio
      )
    )
  where
    unique_row_num = 1
),
format_data as (
  select
    date,
    --PARSE_DATE("%Y%m%d", "20081225")
    parse_date(
      "%d.%m.%Y",
      regexp_replace(
        split(
          regexp_replace(date, r"–", "-"),
          '-'
        ) [safe_offset(1)],
        r"\.$",
        ''
      )
    ) as survey_complete_date,
    concat(
      split(
        regexp_replace(date, r"–", "-"),
        '-'
      ) [safe_offset(0)]
    ) as date_part_1,
    survey_id,
    survey as survey_provider,
    safe_cast(
      array_to_string(
        regexp_extract_all(trim(sample), r"\d"),
        ''
      ) as INT64
    ) as sample,
    safe_cast(
      replace(
        trim(support),
        ',',
        '.'
      ) as FLOAT64
    ) as support,
    party as party_short,
    (
      case
        when party = "PS" then "Perussuomalaiset"
        when party = "SDP" then "Sosiaalidemokraatit"
        when party = "KOK" then "Kokoomus"
        when party = "VIHR" then "Vihreät"
        when party = "KESK" then "Keskusta"
        when party = "VAS" then "Vasemmistoliitto"
        when party = "RKP" then "Ruotsalainen kansanpuolue"
        when party = "KD" then "Kristillisdemokraatit"
        when party = "LIIK" then "Liike Nyt"
        else party
      end
    ) as party
  from
    rearrange_data
),
format_data2 as (
  select
    *,
    safe_cast(
      if(
        regexp_contains(date_part_1, r"\.\d{4}$"),
        date_part_1,
        concat(
          regexp_replace(date_part_1, r"\.+$", ''),
          '.',
          extract(
            year
            from
              survey_complete_date
          )
        )
      ) as date format 'DD.MM.YYYY'
    ) as survey_start_date
  from
    format_data
)
select
  survey_id,
  survey_start_date,
  survey_complete_date,
  date as source_data_date,
  survey_provider,
  sample,
  support,
  party_short,
  party
from
  format_data2
  -- where
  --   survey_start_date is null
  --where survey_complete_date is null
